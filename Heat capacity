import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
import scipy.integrate as integrate 
import math
data = np.loadtxt('heatcapacityData.txt')
temp = data[:, 0]
heatCapacity = data[:, 1]
t = list(temp)
heatCap = list(heatCapacity)
 
def Cp(temp: list, thetaE: float, a: float, b:float, thetaDa: float, thetaDb: float):
    ydata = []
    R = 8.3145      # J/mol*K
    gamma = 0.004      # J/mol K^2
    r = 0.04           ####unsure about this####
    FU = 5
    limits = []
    limits2 = []
    integrand = lambda x: (x**(4)*np.exp(x)/(((np.exp(x))-1)**2))
    Cpe = [((3*R*r) * (((thetaE/x)**2 * np.exp(thetaE/x))/((np.exp(thetaE/x) - 1)**2))) for x in temp]
    [limits.append((0, thetaDa/x)) for x in temp]
    [limits2.append((0, thetaDb/x)) for x in temp]
    for i in range(len(temp)):
        integral, _ = integrate.quad(integrand, limits[i][0], limits[i][1])
        integral2, _ = integrate.quad(integrand,limits2[i][0], limits2[i][1])
        ydata.append((gamma*temp[i]) + FU*((Cpe[i]) + (9*R*(((a*(temp[i]/thetaDa)**3)*integral) + (b*(temp[i]/thetaDb)**3)*integral2))))
    return ydata
#esitmate parameters
thetaE = 65           #approx. maybe a bit higher
a = 0.68                 #unsure on the value
b = 0.32                 #unsure on the value
thetaDa = 174         #unsure on the value
thetaDb = 450         #unsure on the value
#use curve fit to output optimised parameters into popt
#popt, pcov = curve_fit(Cp, temp, heatCapacity, p0=[thetaE, a, b, thetaDa, thetaDb], maxfev=2000)
#thetaE, a, b, thetaDa, thetaDb = popt

#plotting experimental, estimated parameter and fitted data
f = plt.figure(figsize=(15,15))
ax = f.add_subplot(221)
plt.xlabel("Temperature [K]")
plt.ylabel("Heat Capacity")
plt.plot(temp, heatCap, 'k.', ms=0.5)
plt.plot(temp, Cp(temp, thetaE, a, b, thetaDa, thetaDb),'r', ms=0.5)
plt.xlim([1,250])
plt.ylim([0,150])

ax2 = f.add_subplot(222)
plt.xlabel("Temperature$^2$ [K$^2$]")
plt.ylabel("Heat Capacity/T")
plt.plot(temp**2, heatCap/temp, 'k.', ms=0.5)
plt.plot(temp**2, Cp(temp, thetaE, a, b, thetaDa, thetaDb)/temp,'r', ms=0.5)
plt.xlim([1,40])
plt.ylim([0,0.075])

ax3 = f.add_subplot(223)
plt.xlabel("Temperature [K]")
plt.ylabel("Heat Capacity/T$^3$")
plt.plot(temp, heatCap/temp**3, 'k.', ms=0.5)
plt.plot(temp, Cp(temp, thetaE, a, b, thetaDa, thetaDb)/temp**3,'r', ms=0.5)
plt.xlim([1,250])
plt.ylim([0,0.003])
plt.xscale('log')

ax4 = f.add_subplot(224)
plt.xlabel("Temperature [K]")
plt.ylabel("Heat Capacity")
plt.plot(temp, heatCap, 'k.', ms=0.5)
plt.plot(temp, Cp(temp, thetaE, a, b, thetaDa, thetaDb),'r', ms=0.5)
plt.xlim([1,400])
plt.ylim([0.001,1000])
plt.xscale('log')
plt.yscale('log')
plt.show()